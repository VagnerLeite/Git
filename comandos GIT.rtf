{\rtf1\ansi\ansicpg1252\cocoartf1671
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Medium;\f1\fnil\fcharset0 HelveticaNeue-Bold;\f2\fnil\fcharset0 HelveticaNeue;
}
{\colortbl;\red255\green255\blue255;\red61\green52\blue46;\red251\green251\blue249;\red234\green54\blue39;
\red50\green43\blue38;\red242\green242\blue242;\red67\green67\blue67;\red255\green255\blue255;\red236\green235\blue225;
\red16\green117\blue149;}
{\*\expandedcolortbl;;\cssrgb\c30588\c26667\c23529;\cssrgb\c98824\c98824\c98039;\cssrgb\c94510\c30588\c19608;
\cssrgb\c25490\c22353\c19608;\cssrgb\c96078\c96078\c96078;\cssrgb\c33333\c33333\c33333;\cssrgb\c100000\c100000\c100000;\cssrgb\c94118\c93725\c90588;
\cssrgb\c1176\c53333\c65098;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid101\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid201\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid301\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid401\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid501\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid601\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid701\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid801\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid901\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid10}
{\list\listtemplateid11\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1001\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid11}
{\list\listtemplateid12\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1101\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid12}
{\list\listtemplateid13\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1201\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid13}
{\list\listtemplateid14\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1301\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid14}
{\list\listtemplateid15\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1401\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid15}
{\list\listtemplateid16\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1501\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid16}
{\list\listtemplateid17\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1601\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid17}
{\list\listtemplateid18\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1701\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid18}
{\list\listtemplateid19\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1801\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid19}
{\list\listtemplateid20\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid1901\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid20}
{\list\listtemplateid21\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid2001\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid21}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}{\listoverride\listid11\listoverridecount0\ls11}{\listoverride\listid12\listoverridecount0\ls12}{\listoverride\listid13\listoverridecount0\ls13}{\listoverride\listid14\listoverridecount0\ls14}{\listoverride\listid15\listoverridecount0\ls15}{\listoverride\listid16\listoverridecount0\ls16}{\listoverride\listid17\listoverridecount0\ls17}{\listoverride\listid18\listoverridecount0\ls18}{\listoverride\listid19\listoverridecount0\ls19}{\listoverride\listid20\listoverridecount0\ls20}{\listoverride\listid21\listoverridecount0\ls21}}
\paperw11900\paperh16840\margl1440\margr1440\vieww19900\viewh13840\viewkind0
\deftab720
\pard\pardeftab720\sl660\sa200\partightenfactor0

\f0\fs60 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Instalando e Configurando\cb1 \
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 Instala\'e7\'e3o no MacOs: (S\'f3 coloquei esse porque eu tenho e trabalho com Mac){\field{\*\fldinst{HYPERLINK "http://comandosgit.github.io/#linux"}}{\fldrslt 
\f0\b0\fs28 \cf5 \cb1 \strokec5 \uc0\u8232 }}
\f2\b0\fs28 \cf5 \cb1 \strokec5 \uc0\u8232 \cf2 \strokec2 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Existem duas formas f\'e1ceis de se instalar Git em um Mac. A mais f\'e1cil delas \'e9 usar o instalador gr\'e1fico do Git, que voc\'ea pode baixar da p\'e1gina do SourceForge:\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
{\field{\*\fldinst{HYPERLINK "http://sourceforge.net/projects/git-osx-installer/"}}{\fldrslt \cf5 \cb6 \strokec5 http://sourceforge.net/projects/git-osx-installer/}}\cb6 \
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 A outra forma comum \'e9 instalar o Git via MacPorts ({\field{\*\fldinst{HYPERLINK "http://www.macports.org/"}}{\fldrslt \cf5 \strokec5 http://www.macports.org}}). Se voc\'ea tem o MacPOrts instalado, instale o Git via\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 sudo port install git-core +svn +doc +bash_completion +gitweb\
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 \
git config\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\ri40\sl380\partightenfactor0
\ls1\ilvl0
\f0\b0\fs28 \cf7 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0  - {\field{\*\fldinst{HYPERLINK "http://comandosgit.github.io/#gitconfig1"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Sua Identidade}}
\f2 \cf2 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 A primeira coisa que voc\'ea deve fazer quando instalar o Git \'e9 definir o seu nome de usu\'e1rio e endere\'e7o de e-mail. Isso \'e9 importante porque todos os commits no Git utilizam essas informa\'e7\'f5es, e est\'e1 imutavelmente anexado nos commits que voc\'ea realiza:\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git config --global user.name "John Doe"\'a0\cb1 \
\cb6 git config --global user.email johndoe@example.com\
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 \
Relembrando, voc\'ea s\'f3 precisar\'e1 fazer isso uma vez caso passe a op\'e7\'e3o --global, pois o Git sempre usar\'e1 essa informa\'e7\'e3o para qualquer coisa que voc\'ea fa\'e7a nesse sistema. Caso voc\'ea queira sobrepor estas com um nome ou endere\'e7o de e-mail diferentes para projetos espec\'edficos, voc\'ea pode executar o comando sem a op\'e7\'e3o --global quando estiver no pr\'f3prio projeto.\cb1 \
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 git help\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\ri40\sl380\partightenfactor0
\ls2\ilvl0
\f0\b0\fs28 \cf7 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0  - {\field{\*\fldinst{HYPERLINK "http://comandosgit.github.io/#githelp1"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Obter Ajuda}}
\f2 \cf2 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Se voc\'ea precisar de ajuda ao usar Git, existem tr\'eas maneiras de obter a ajuda para qualquer um dos comandos Git:\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git help \{comando\}\'a0\cb1 \
\cb6 git \{comando\} --help\'a0\cb1 \
\cb6 man git- \{comando\}\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb9 \
\pard\pardeftab720\sl660\sa200\partightenfactor0

\f0\fs60 \cf2 \cb3 Criando o projeto\cb1 \
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 git init\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\ri40\sl380\partightenfactor0
\ls3\ilvl0
\f0\b0\fs28 \cf7 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 - {\field{\*\fldinst{HYPERLINK "http://comandosgit.github.io/#gitinit1"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Reposit\'f3rio Git}}
\f2 \cf2 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Voc\'ea pode obter um projeto Git utilizando duas formas principais. A primeira faz uso de um projeto ou diret\'f3rio existente e o importa para o Git. A segunda clona um reposit\'f3rio Git existente a partir de outro servidor.\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl300\sa200\partightenfactor0

\f1\b \cf10 \cb3 \strokec10 Inicializando um Reposit\'f3rio em um Diret\'f3rio Existente\cb1 \
\pard\pardeftab720\sl320\sa200\partightenfactor0

\f2\b0 \cf2 \cb3 \strokec2 Caso voc\'ea esteja iniciando o monitoramento de um projeto existente com Git, voc\'ea precisa ir para o diret\'f3rio do projeto e digitar\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git init\
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Isso cria um novo subdiret\'f3rio chamado .git que contem todos os arquivos necess\'e1rios de seu reposit\'f3rio \'97 um esqueleto de reposit\'f3rio Git. Neste ponto, nada em seu projeto \'e9 monitorado.\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl300\sa200\partightenfactor0

\f1\b \cf10 \cb3 \strokec10 Primeira vers\'e3o\cb1 \
\pard\pardeftab720\sl320\sa200\partightenfactor0

\f2\b0 \cf2 \cb3 \strokec2 Caso voc\'ea queira come\'e7ar a controlar o versionamento dos arquivos existentes (diferente de um diret\'f3rio vazio), voc\'ea provavelmente deve come\'e7ar a monitorar esses arquivos e fazer um commit inicial. Voc\'ea pode realizar isso com poucos comandos\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 touch .gitignore\'a0\cb1 \
\cb6 git add .gitignore\'a0\cb1 \
\cb6 git commit -m "Vers\'e3o inicial do projeto"\
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Bem, n\'f3s iremos repassar esses comandos em um momento. Neste ponto, voc\'ea tem um reposit\'f3rio Git com arquivos monitorados e um commit inicial.\cb1 \
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 git clone\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\ri40\sl380\partightenfactor0
\ls4\ilvl0
\f0\b0\fs28 \cf7 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 - {\field{\*\fldinst{HYPERLINK "http://comandosgit.github.io/#gitclone1"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Clonando um Reposit\'f3rio Existente}}
\f2 \cf2 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Voc\'ea clona um reposit\'f3rio com\'a0
\f1\b git clone [url]
\f2\b0 . Por exemplo, caso voc\'ea queria clonar a biblioteca Git do Ruby chamada Grit, voc\'ea pode faz\'ea-lo da seguinte forma:\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git clone git://github.com/schacon/grit.git\
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Se voc\'ea entrar no novo diret\'f3rio grit, voc\'ea ver\'e1 todos os arquivos do projeto nele, pronto para serem editados ou utilizados. Caso voc\'ea queira clonar o reposit\'f3rio em um diret\'f3rio diferente de grit, \'e9 poss\'edvel especificar esse diret\'f3rio utilizando a op\'e7\'e3o abaixo:\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git clone git://github.com/schacon/grit.git mygrit\
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Este comando faz exatamente a mesma coisa que o anterior, mas o diret\'f3rio alvo ser\'e1 chamado\'a0
\f1\b mygrit
\f2\b0 .\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb9 \
\pard\pardeftab720\sl660\sa200\partightenfactor0

\f0\fs60 \cf2 \cb3 B\'e1sico\cb1 \
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 git add\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\ri40\sl380\partightenfactor0
\ls5\ilvl0
\f0\b0\fs28 \cf7 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 - {\field{\*\fldinst{HYPERLINK "http://comandosgit.github.io/#gitadd1"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Gravando Altera\'e7\'f5es}}
\f2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 \uc0\u8232 \cf2 \cb1 \strokec2 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Quando um reposit\'f3rio \'e9 inicialmente clonado, todos os seus arquivos estar\'e3o monitorados e inalterados porque voc\'ea simplesmente os obteve e ainda n\'e3o os editou. Conforme voc\'ea edita esses arquivos, o Git passa a v\'ea-los como modificados, porque voc\'ea os alterou desde seu \'faltimo commit. Voc\'ea seleciona esses arquivos modificados e ent\'e3o faz o commit de todas as altera\'e7\'f5es selecionadas e o ciclo se repete.\cb1 \
\pard\pardeftab720\sl300\sa200\partightenfactor0

\f1\b \cf10 \cb3 \strokec10 Monitorando Novos Arquivos\cb1 \
\pard\pardeftab720\sl320\sa200\partightenfactor0

\f2\b0 \cf2 \cb3 \strokec2 Para passar a monitorar um novo arquivo, use o comando\'a0
\f1\b git add
\f2\b0 . Para monitorar o arquivo\'a0
\f1\b README
\f2\b0 , voc\'ea pode rodar isso:\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git add README\
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Se voc\'ea rodar o comando\'a0
\f1\b git status
\f2\b0 , voc\'ea pode ver que o seu arquivo\'a0
\f1\b README
\f2\b0 \'a0agora est\'e1 sendo monitorado. Os arquivos monitorados ser\'e3o os que faram parte do commit.\cb1 \
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 git status\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\ri40\sl380\partightenfactor0
\ls6\ilvl0
\f0\b0\fs28 \cf7 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 - {\field{\*\fldinst{HYPERLINK "http://comandosgit.github.io/#gitstatus1"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Verificando o Status}}
\f2 \cf2 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 A principal ferramenta utilizada para determinar quais arquivos est\'e3o em quais estados \'e9 o comando:\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git status\
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 \
O comando lhe mostra em qual branch voc\'ea se encontra. Vamos dizer que voc\'ea adicione um novo arquivo em seu projeto, um simples arquivo\'a0
\f1\b README
\f2\b0 . Caso o arquivo n\'e3o exista e voc\'ea execute\'a0
\f1\b git status
\f2\b0 , voc\'ea ver\'e1 o arquivo n\'e3o monitorado dessa forma:\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 # On branch master\'a0\cb1 \
\cb6 # Untracked files:\'a0\cb1 \
\cb6 # (use "git add \{file\}..." to include in what will be committed)\'a0\cb1 \
\cb6 #\'a0\cb1 \
\cb6 # README\'a0\cb1 \
\cb6 nothing added to commit but untracked files present (use "git add" to track)\
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 \
Voc\'ea pode ver que o seu novo arquivo\'a0
\f1\b README
\f2\b0 \'a0n\'e3o est\'e1 sendo monitorado, pois est\'e1 listado sob o cabe\'e7alho\'a0
\f1\b "Untracked files"
\f2\b0 \'a0na sa\'edda do comando status. N\'e3o monitorado significa basicamente que o Git est\'e1 vendo um arquivo que n\'e3o existia na \'faltima captura (commit); o Git n\'e3o vai inclu\'ed-lo nas suas capturas de commit at\'e9 que voc\'ea o diga explicitamente que assim o fa\'e7a. Ele faz isso para que voc\'ea n\'e3o inclua acidentalmente arquivos bin\'e1rios gerados, ou outros arquivos que voc\'ea n\'e3o t\'eam a inten\'e7\'e3o de incluir. Digamos, que voc\'ea queira incluir o arquivo\'a0
\f1\b README
\f2\b0 , portanto vamos come\'e7ar a monitorar este arquivo.\cb1 \
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 git diff\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\ri40\sl380\partightenfactor0
\ls7\ilvl0
\f0\b0\fs28 \cf7 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 - {\field{\*\fldinst{HYPERLINK "http://comandosgit.github.io/#gitdiff1"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Verificando Mudan\'e7as}}
\f2 \cf2 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Se o comando\'a0
\f1\b git status
\f2\b0 \'a0for muito vago \'97 voc\'ea quer saber exatamente o que voc\'ea alterou, n\'e3o apenas quais arquivos foram alterados \'97 voc\'ea pode utilizar o comando.\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git diff\
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Apesar do comando\'a0
\f1\b git status
\f2\b0 \'a0responder essas duas perguntas de maneira geral, o\'a0
\f1\b git diff
\f2\b0 \'a0mostra as linhas exatas que foram adicionadas e removidas \'97 o patch, por assim dizer.\'a0\cb1 \uc0\u8232 \cb3 \
Se voc\'ea quer ver o que selecionou que ir\'e1 no seu pr\'f3ximo commit, pode utilizar:\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git diff --cached\
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 \
git commit\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\ri40\sl380\partightenfactor0
\ls8\ilvl0
\f0\b0\fs28 \cf7 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 - {\field{\*\fldinst{HYPERLINK "http://comandosgit.github.io/#gitcommit1"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Commits}}
\f2 \cf2 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Armazena o conte\'fado atual do \'edndice em um novo commit, juntamente com uma mensagem de registro do usu\'e1rio que descreve as mudan\'e7as.\'a0\cb1 \uc0\u8232 \cb3 Se usa o commit depois de j\'e1 ter feito o\'a0
\f1\b git add
\f2\b0 , para fazer o commit:\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git commit -m "Mensagem"\
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Para commitar tamb\'e9m os arquivos versionados mesmo n\'e3o estando no Stage basta adicionar o par\'e2metro -a\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git commit\'a0
\f1\b -a
\f2\b0 \'a0-m "Mensagem"\
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Refazendo commit quando esquecer de adicionar um arquivo no Stage:\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git commit -m "Mensagem"\'a0
\f1\b --amend
\f2\b0 \
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 O amend \'e9 destrutivo e s\'f3 deve ser utilizado antes do commit ter sido enviado ao servidor remoto.\cb1 \
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 \
git reset\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\ri40\sl380\partightenfactor0
\ls9\ilvl0
\f0\b0\fs28 \cf7 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 - {\field{\*\fldinst{HYPERLINK "http://comandosgit.github.io/#gitreset1"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Desfazendo Coisas}}
\f2 \cf2 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Em qualquer fase, voc\'ea pode querer desfazer alguma coisa. Aqui, veremos algumas ferramentas b\'e1sicas para desfazer modifica\'e7\'f5es que voc\'ea fez. Cuidado, porque voc\'ea n\'e3o pode desfazer algumas dessas mudan\'e7as. Essa \'e9 uma das poucas \'e1reas no Git onde voc\'ea pode perder algum trabalho se fizer errado.\'a0\cb1 \uc0\u8232 \cb3 Para voltar ao \'faltimo commit:\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git reset --hard HEAD~1\
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Para voltar ao \'faltimo commit e mant\'e9m os \'faltimos arquivos no Stage:\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git reset --soft HEAD~1\
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Volta para o commit com a hash XXXXXXXXXXX:\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git reset --hard XXXXXXXXXXX\
\pard\pardeftab720\sl300\sa200\partightenfactor0

\f1\b \cf10 \cb3 \strokec10 \
Recuperando commit apagado pelo git reset\cb1 \
\pard\pardeftab720\sl320\sa200\partightenfactor0

\f2\b0 \cf2 \cb3 \strokec2 Para visualizar os hashs\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git reflog\
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 E para aplicar:\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git merge \{hash\}\
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 \
git rm\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\ri40\sl380\partightenfactor0
\ls10\ilvl0
\f0\b0\fs28 \cf7 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 - {\field{\*\fldinst{HYPERLINK "http://comandosgit.github.io/#gitrm1"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Removendo Arquivos}}
\f2 \cf2 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Para remover um arquivo do Git, voc\'ea tem que remov\'ea-lo dos arquivos que est\'e3o sendo monitorados (mais precisamente, remov\'ea-lo da sua \'e1rea de sele\'e7\'e3o) e ent\'e3o fazer o commit. O comando\'a0
\f1\b git rm
\f2\b0 \'a0faz isso e tamb\'e9m remove o arquivo do seu diret\'f3rio para voc\'ea n\'e3o ver ele como arquivo n\'e3o monitorado (untracked file) na pr\'f3xima vez.\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git rm -f \{arquivo\}\
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Se voc\'ea modificou o arquivo e j\'e1 o adicionou na \'e1rea de sele\'e7\'e3o, voc\'ea deve for\'e7ar a remo\'e7\'e3o com a op\'e7\'e3o\'a0
\f1\b -f
\f2\b0 . Essa \'e9 uma funcionalidade de seguran\'e7a para prevenir remo\'e7\'f5es acidentais de dados que ainda n\'e3o foram gravados em um snapshot e n\'e3o podem ser recuperados do Git.\cb1 \
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 \
git mv\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\ri40\sl380\partightenfactor0
\ls11\ilvl0
\f0\b0\fs28 \cf7 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 - {\field{\*\fldinst{HYPERLINK "http://comandosgit.github.io/#gitmv1"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Movendo Arquivos}}
\f2 \cf2 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Diferente de muitos sistemas VCS, o Git n\'e3o monitora explicitamente arquivos movidos.\'a0\cb1 \uc0\u8232 \cb3 \'c9 um pouco confuso que o Git tenha um comando\'a0
\f1\b mv
\f2\b0 . Se voc\'ea quiser renomear um arquivo no Git, voc\'ea pode fazer isso com\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git mv arquivo_origem arquivo_destino\
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 e funciona. De fato, se voc\'ea fizer algo desse tipo e consultar o status, voc\'ea ver\'e1 que o Git considera que o arquivo foi renomeado.\cb1 \
\cb3 No entanto, isso \'e9 equivalente a rodar algo como:\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 mv README.txt README\'a0\cb1 \
\cb6 git rm README.txt\'a0\cb1 \
\cb6 git add README\
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 \
O Git descobre que o arquivo foi renomeado implicitamente, ent\'e3o ele n\'e3o se importa se voc\'ea renomeou por este caminho ou com o comando\'a0
\f1\b mv
\f2\b0 . A \'fanica diferen\'e7a real \'e9 que o comando\'a0
\f1\b mv
\f2\b0 \'a0\'e9 mais conveniente, executa tr\'eas passos de uma vez. O mais importante, voc\'ea pode usar qualquer ferramenta para renomear um arquivo, e usar add/rm depois, antes de consolidar com o commit.\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb9 \
\pard\pardeftab720\sl660\sa200\partightenfactor0

\f0\fs60 \cf2 \cb3 Branch e Merge\cb1 \
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 git branch\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\ri40\sl380\partightenfactor0
\ls12\ilvl0
\f0\b0\fs28 \cf7 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 - {\field{\*\fldinst{HYPERLINK "http://comandosgit.github.io/#gitbranch1"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Branch B\'e1sico}}
\f2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 \uc0\u8232 \cf2 \cb1 \strokec2 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Um branch no Git \'e9 simplesmente um leve ponteiro m\'f3vel para um dos commits. O nome do branch padr\'e3o no Git \'e9 master. Como voc\'ea inicialmente fez commits, voc\'ea tem um branch principal (
\f1\b master branch
\f2\b0 ) que aponta para o \'faltimo commit que voc\'ea fez. Cada vez que voc\'ea faz um commit ele avan\'e7a automaticamente.\'a0\cb1 \uc0\u8232 \cb3 O que acontece se voc\'ea criar um novo branch? Bem, isso cria um novo ponteiro para que voc\'ea possa se mover. Vamos dizer que voc\'ea crie um novo branch chamado testing. Voc\'ea faz isso com o comando\'a0
\f1\b git branch
\f2\b0 :\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git branch testing\
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 \
Isso cria um novo ponteiro para o mesmo commit em que voc\'ea est\'e1 no momento.\'a0\cb1 \uc0\u8232 \cb3 Para mudar para um branch existente, voc\'ea executa o comando\'a0
\f1\b git checkout
\f2\b0 . Vamos mudar para o novo branch testing:\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git checkout testing\
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 \
Isto move o HEAD para apontar para o branch testing.\cb1 \
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 \
git checkout\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\ri40\sl380\partightenfactor0
\ls13\ilvl0
\f0\b0\fs28 \cf7 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 - {\field{\*\fldinst{HYPERLINK "http://comandosgit.github.io/#gitcheckout1"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Mudando de Branch}}
\f2 \cf2 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Com o\'a0
\f1\b git checkout
\f2\b0 \'a0voc\'ea pode mudar de branch, caso a branch ainda n\'e3o exista voc\'ea poder\'e1 passar o par\'e2metro\'a0
\f1\b -b
\f2\b0 \'a0para criar.\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git checkout -b \{nome_da_branch\}\
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 \
git merge\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\ri40\sl380\partightenfactor0
\ls14\ilvl0
\f0\b0\fs28 \cf7 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 - {\field{\*\fldinst{HYPERLINK "http://comandosgit.github.io/#gitmerge1"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Merge B\'e1sico}}
\f2 \cf2 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Suponha que voc\'ea decidiu que o trabalho na tarefa #53 est\'e1 completo e pronto para ser feito o merge no branch\'a0
\f1\b master
\f2\b0 . Para fazer isso, voc\'ea far\'e1 o merge do seu branch\'a0
\f1\b iss53
\f2\b0 , bem como o merge do branch\'a0
\f1\b hotfix
\f2\b0 \'a0de antes. Tudo que voc\'ea tem a fazer \'e9 executar o checkout do branch para onde deseja fazer o merge e ent\'e3o rodar o comando\'a0
\f1\b git merge
\f2\b0 :\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git checkout master\'a0\cb1 \
\cb6 git merge iss53\
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 \
git mergetool\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\ri40\sl380\partightenfactor0
\ls15\ilvl0
\f0\b0\fs28 \cf7 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 - {\field{\*\fldinst{HYPERLINK "http://comandosgit.github.io/#gitmergetool1"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Resolvendo conflitos}}
\f2 \cf2 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Se voc\'ea quer usar uma ferramenta gr\'e1fica para resolver esses problemas, voc\'ea pode executar o seguinte comando que abre uma ferramenta visual de merge adequada e percorre os conflitos.\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git mergetool\
\pard\pardeftab720\sl300\sa200\partightenfactor0

\f1\b \cf10 \cb3 \strokec10 \
Arquivos Tempor\'e1rios\cb1 \
\pard\pardeftab720\sl340\sa200\partightenfactor0
\cf2 \cb3 \strokec2 git mergetool
\f2\b0 \'a0cria\'a0
\f1\b * .orig
\f2\b0 \'a0arquivos de backup ao resolver fus\'f5es. Estes s\'e3o seguros para remover uma vez que um arquivo foi fundida e sua\'a0
\f1\b git mergetool
\f2\b0 \'a0sess\'e3o foi conclu\'edda.\cb1 \
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 \
git log\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\ri40\sl380\partightenfactor0
\ls16\ilvl0
\f0\b0\fs28 \cf7 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 - {\field{\*\fldinst{HYPERLINK "http://comandosgit.github.io/#gitlog1"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Hist\'f3rico de Commits}}
\f2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 \uc0\u8232 \cf2 \cb1 \strokec2 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Depois que voc\'ea tiver criado v\'e1rios commits, ou se clonou um reposit\'f3rio com um hist\'f3rico de commits existente, voc\'ea provavelmente vai querer ver o que aconteceu. A ferramente mais b\'e1sica e poderosa para fazer isso \'e9 o comando:\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git log\
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 \
\
git stash\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\ri40\sl380\partightenfactor0
\ls17\ilvl0
\f0\b0\fs28 \cf7 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 - {\field{\*\fldinst{HYPERLINK "http://comandosgit.github.io/#gitstash1"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Fazendo Stash}}
\f2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 \uc0\u8232 \cf2 \cb1 \strokec2 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Muitas vezes, quando voc\'ea est\'e1 trabalhando em uma parte do seu projeto, as coisas est\'e3o em um estado confuso e voc\'ea quer mudar de branch por um tempo para trabalhar em outra coisa. O problema \'e9, voc\'ea n\'e3o quer fazer o commit de um trabalho incompleto somente para voltar a ele mais tarde. A resposta para esse problema \'e9 o comando\'a0
\f1\b git stash
\f2\b0 .\'a0\cb1 \uc0\u8232 \cb3 Voc\'ea quer mudar de branch, mas n\'e3o quer fazer o commit do que voc\'ea ainda est\'e1 trabalhando; voc\'ea ir\'e1 fazer o stash das modifica\'e7\'f5es. Para fazer um novo stash na sua pilha, execute:\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git stash\
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 \
Seu diret\'f3rio de trabalho estar\'e1 limpo.\'a0\cb1 \uc0\u8232 \cb3 Neste momento, voc\'ea pode facilmente mudar de branch e trabalhar em outra coisa; suas altera\'e7\'f5es est\'e3o armazenadas na sua pilha. Para ver as stashes que voc\'ea guardou, voc\'ea pode usar\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git stash list\
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 \
Voc\'ea pode aplicar aquele que acabou de fazer o stash com o comando mostrado na sa\'edda de ajuda do comando stash original:\'a0
\f1\b git stash apply
\f2\b0 . Se voc\'ea quer aplicar um dos stashes mais antigos, voc\'ea pode especific\'e1-lo, assim:\'a0
\f1\b git stash apply stash@\{2\}
\f2\b0 . Se voc\'ea n\'e3o especificar um stash, Git assume que \'e9 o stash mais recente e tenta aplic\'e1-lo.\cb1 \
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 \
git tag\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\ri40\sl380\partightenfactor0
\ls18\ilvl0
\f0\b0\fs28 \cf7 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 - {\field{\*\fldinst{HYPERLINK "http://comandosgit.github.io/#gitstag1"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Tagging}}
\f2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 \uc0\u8232 \cf2 \cb1 \strokec2 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Git tem a habilidade de criar tags em pontos espec\'edficos na hist\'f3ria do c\'f3digo como pontos importantes. Geralmente as pessoas usam esta funcionalidade para marcar pontos de release (v1.0, e por a\'ed vai). Nesta se\'e7\'e3o, voc\'ea aprender\'e1 como listar as tags dispon\'edveis, como criar novas tags, e quais s\'e3o os tipos diferentes de tags.\'a0\cb1 \uc0\u8232 \cb3 Para listar as\'a0
\f1\b tags
\f2\b0 \'a0execute:\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git tag\
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 \
Para criar uma\'a0
\f1\b tag
\f2\b0 \'a0basta executar o seguinte comando, caso n\'e3o queira criar a\'a0
\f1\b tag
\f2\b0 \'a0anotada, somente retire os par\'e2metros\'a0
\f1\b -a
\f2\b0 \'a0e\'a0
\f1\b -m
\f2\b0 .\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git tag -a v1.4 -m 'my version 1.4'\
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb9 \
\pard\pardeftab720\sl660\sa200\partightenfactor0

\f0\fs60 \cf2 \cb3 \
Compartilhar e Atualizar Projetos\cb1 \
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 git fetch\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\ri40\sl380\partightenfactor0
\ls19\ilvl0
\f0\b0\fs28 \cf7 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 - {\field{\*\fldinst{HYPERLINK "http://comandosgit.github.io/#gitfetch1"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Fazendo o Fetch}}
\f2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 \uc0\u8232 \cf2 \cb1 \strokec2 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Para pegar dados dos seus projetos remotos, voc\'ea pode executar:\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git fetch origin\
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Esse comando vai at\'e9 o projeto remoto e pega todos os dados que voc\'ea ainda n\'e3o tem. Depois de fazer isso, voc\'ea deve ter refer\'eancias para todos os branches desse remoto, onde voc\'ea pode fazer o merge ou inspecionar a qualquer momento.\cb1 \
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 \
git pull\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\ri40\sl380\partightenfactor0
\ls20\ilvl0
\f0\b0\fs28 \cf7 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 - {\field{\*\fldinst{HYPERLINK "http://comandosgit.github.io/#gitpull1"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Atualizando local}}
\f2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 \uc0\u8232 \cf2 \cb1 \strokec2 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl320\sa200\partightenfactor0
\cf2 \cb3 Incorpora as altera\'e7\'f5es de um reposit\'f3rio remoto no branch atual. Em seu modo padr\'e3o,\'a0
\f1\b git pull
\f2\b0 \'a0\'e9 uma abrevia\'e7\'e3o para\'a0
\f1\b git fetch
\f2\b0 seguido de git merge\'a0
\f1\b FETCH_HEAD
\f2\b0 . Por exemplo, se eu estiver em uma branch chamada\'a0
\f1\b develop
\f2\b0 \'a0e quiser atualizar caso haja atualiza\'e7\'f5es remotamente:\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git pull origin develop\
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 \
git push\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\ri40\sl380\partightenfactor0
\ls21\ilvl0
\f0\b0\fs28 \cf7 \cb8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 - {\field{\*\fldinst{HYPERLINK "http://comandosgit.github.io/#gitpush1"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 Empurrando seus commits}}
\f2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 \uc0\u8232 \cf2 \cb1 \strokec2 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \
\pard\pardeftab720\sl340\sa200\partightenfactor0

\f1\b \cf2 \cb3 O git push
\f2\b0 \'a0\'e9 o comando em que voc\'ea transfere commits a partir do seu reposit\'f3rio local para um reposit\'f3rio remoto. \'c9 a contrapartida do\'a0
\f1\b git fetch
\f2\b0 , que busca importa\'e7\'f5es e comprometem as ag\'eancias locais, utilizando o\'a0
\f1\b git push
\f2\b0 \'a0as exporta\'e7\'f5es comprometem as filiais remotas. Para fazer isso, voc\'ea executa\'a0
\f1\b git push [nome_do_reposit\'f3rio_remoto] [nome_da_sua_branch_local]
\f2\b0 , que vai tentar fazer que o\'a0
\f1\b [nome_do_reposit\'f3rio_remoto]
\f2\b0 \'a0receba a sua branch\'a0
\f1\b [nome_da_sua_branch_local]
\f2\b0 \'a0contendo todos seus commits com altera\'e7\'f5es. Por exemplo:\
\cb1 \
\pard\pardeftab720\sl320\partightenfactor0
\cf2 \cb6 git push origin develop\
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 \
git remote\cb1 \
\cb3 git submodule\cb1 \
\pard\pardeftab720\sl320\partightenfactor0

\f2\b0\fs28 \cf2 \cb9 \strokec2 \
\pard\pardeftab720\sl660\sa200\partightenfactor0

\f0\fs60 \cf2 \cb3 \
Inspe\'e7\'e3o e Compara\'e7\'e3o\cb1 \
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 git show\cb1 \
\cb3 git log\cb1 \
\cb3 git diff\cb1 \
\cb3 git shortlog\cb1 \
\cb3 git describe\cb1 \
\pard\pardeftab720\sl320\partightenfactor0

\f2\b0\fs28 \cf2 \cb9 \strokec2 \
\pard\pardeftab720\sl660\sa200\partightenfactor0

\f0\fs60 \cf2 \cb3 Pacotes\cb1 \
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 git apply\cb1 \
\cb3 git cherry-pick\cb1 \
\cb3 git diff\cb1 \
\cb3 git rebase\cb1 \
\cb3 git revert\cb1 \
\pard\pardeftab720\sl320\partightenfactor0

\f2\b0\fs28 \cf2 \cb9 \strokec2 \
\pard\pardeftab720\sl660\sa200\partightenfactor0

\f0\fs60 \cf2 \cb3 Debugando\cb1 \
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 git bisect\cb1 \
\cb3 git blame\cb1 \
\cb3 git grep\cb1 \
\pard\pardeftab720\sl320\partightenfactor0

\f2\b0\fs28 \cf2 \cb9 \strokec2 \
\pard\pardeftab720\sl660\sa200\partightenfactor0

\f0\fs60 \cf2 \cb3 Email\cb1 \
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 git am\cb1 \
\cb3 git apply\cb1 \
\cb3 git format-patch\cb1 \
\cb3 git send-email\cb1 \
\cb3 git request-pull\cb1 \
\pard\pardeftab720\sl320\partightenfactor0

\f2\b0\fs28 \cf2 \cb9 \strokec2 \
\pard\pardeftab720\sl660\sa200\partightenfactor0

\f0\fs60 \cf2 \cb3 Sistemas Externos\cb1 \
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 git svn\cb1 \
\cb3 git fast-import\cb1 \
\pard\pardeftab720\sl320\partightenfactor0

\f2\b0\fs28 \cf2 \cb9 \strokec2 \
\pard\pardeftab720\sl660\sa200\partightenfactor0

\f0\fs60 \cf2 \cb3 Administra\'e7\'e3o\cb1 \
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 git clean\cb1 \
\cb3 git gc\cb1 \
\cb3 git fsck\cb1 \
\cb3 git reflog\cb1 \
\cb3 git filter-branch\cb1 \
\cb3 git instaweb\cb1 \
\cb3 git archive\cb1 \
\pard\pardeftab720\sl320\partightenfactor0

\f2\b0\fs28 \cf2 \cb9 \strokec2 \
\pard\pardeftab720\sl660\sa200\partightenfactor0

\f0\fs60 \cf2 \cb3 Servidor\cb1 \
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 git daemon\cb1 \
\cb3 git update-server-info\cb1 \
\pard\pardeftab720\sl320\partightenfactor0

\f2\b0\fs28 \cf2 \cb9 \strokec2 \
\pard\pardeftab720\sl660\sa200\partightenfactor0

\f0\fs60 \cf2 \cb3 Canaliza\'e7\'e3o de C\'f3digo\cb1 \
\pard\pardeftab720\sl380\sa200\partightenfactor0

\f1\b\fs36 \cf4 \cb3 \strokec4 git cat-file\cb1 \
\cb3 git commit-tree\cb1 \
\cb3 git count-objects\cb1 \
\cb3 git diff-index\cb1 \
\cb3 git for-each-ref\cb1 \
\cb3 git hash-object\cb1 \
\cb3 git merge-base\cb1 \
\cb3 git read-tree\cb1 \
\cb3 git rev-list\cb1 \
\cb3 git rev-parse\cb1 \
\cb3 git show-ref\cb1 \
\cb3 git symbolic-ref\cb1 \
\cb3 git update-index\cb1 \
\cb3 git update-ref\cb1 \
\cb3 git verify-pack\cb1 \
\cb3 git write-tree\cb1 \
}